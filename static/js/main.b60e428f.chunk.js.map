{"version":3,"sources":["features/List/SearchBar.tsx","api/Queries.tsx","features/List/VolumeCard.tsx","features/Hooks/debounce.tsx","features/List/ListView.tsx","features/Details/DetailsView.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","title","display","breakpoints","up","searchBar","width","marginLeft","marginRight","flex","SearchBar","handleInput","inputVal","classes","AppBar","position","id","Toolbar","Typography","variant","className","noWrap","Icon","InputBase","placeholder","root","input","inputProps","value","onChange","e","target","API_KEY","process","GET_VOLUMES_BY_SEARCH","query","index","a","axios","get","response","data","items","status","totalItems","map","book","volumeInfo","subtitle","authors","publishedDate","description","thumbnail","imageLinks","smallThumbnail","console","error","GET_VOLUME_BY_ID","accessInfo","publicDomain","epub","acsTokenLink","additionalInfo","maxWidth","minWidth","minHeight","paddingTop","marginTop","media","margin","color","VolumeCard","Card","CardMedia","height","component","alt","image","CardContent","to","gutterBottom","join","length","slice","replace","align","useDebounced","useState","debounced","setDebounced","useEffect","unSub","setTimeout","clearTimeout","ListView","App","useRef","loading","setLoading","volumes","setVolumes","text","setText","debouncedText","fetchMoreVolumes","current","toString","log","document","addEventListener","getBoundingClientRect","bottom","window","innerHeight","Grid","container","alignItems","ref","item","xs","vol","CircularProgress","DetailsView","useParams","notFound","setFound","volData","setVolData","fetchVolumeInfo","location","href","Fab","Alert","severity","AlertTitle","Button","onScroll","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b60e428f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, InputBase, Typography, Toolbar, Theme, createStyles, makeStyles, Icon } from '@material-ui/core';\r\n\r\nimport './Search.scss';\r\n\r\ninterface SearchBarProps {\r\n  handleInput: React.Dispatch<React.SetStateAction<string>>\r\n  inputVal: string,\r\n}\r\n\r\n\r\n\r\n//Responsive styles\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'block'\r\n      }\r\n    },\r\n    searchBar: {\r\n      width: \"100%\",\r\n      marginLeft: '0',\r\n      marginRight: '0',\r\n      flex: 1,\r\n      [theme.breakpoints.up('md')]: {\r\n        marginLeft: '2em',\r\n        marginRight: '1em',\r\n        width: 'auto',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\n\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = (\r\n  { handleInput, inputVal }\r\n) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      id=\"bar\"\r\n    >\r\n      <Toolbar>\r\n        <Typography\r\n          variant=\"h5\"\r\n          className={`title ${classes.title}`}\r\n          noWrap\r\n        >\r\n          Books App\r\n        </Typography>\r\n\r\n        <div className={`search ${classes.searchBar}`}>\r\n          <div className=\"icon\">\r\n            <Icon>search</Icon>\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search for book...\"\r\n            classes={{\r\n              root: \"inputRoot\",\r\n              input: \"inputText\"\r\n            }}\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            value={inputVal}\r\n            onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\r\n              handleInput(e.target.value as string);\r\n            }}\r\n          />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default SearchBar","import axios from 'axios';\r\n\r\nconst API_VOLUMES_BASE = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\nconst API_VOL_BASE = \"https://www.googleapis.com/books/v1/volumes/\";\r\nconst API_KEY = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;\r\nconst BOOK_SUBJECT = \"fiction\"\r\n\r\nexport interface Volume {\r\n  title: string;\r\n  subtitle: string;\r\n  authors: Array<string>;\r\n  publishedDate: string;\r\n  description: string;\r\n  thumbnail: string;\r\n  id: string;\r\n}\r\n\r\nexport interface VolumeDetails extends Volume {\r\n  acsTokenLink: string | null;\r\n}\r\n\r\ninterface ResponseVolumes {\r\n  status: boolean;\r\n  data: Array<Volume>;\r\n}\r\ninterface ResponseVol extends Omit<ResponseVolumes, 'data'> {\r\n  data: VolumeDetails;\r\n  additionalInfo?: string\r\n}\r\n\r\n/**\r\n * @desc Queries google books api with given text and returns response.\r\n * @param query text to query \r\n * @param index from what index will query start\r\n * @returns Promise with {status} and volumes[]\r\n */\r\nexport const GET_VOLUMES_BY_SEARCH = async (query: string, index: string) => {\r\n  try {\r\n    const response = await axios.get(`${API_VOLUMES_BASE}${query}+subject:${BOOK_SUBJECT}&startIndex=${index}&maxResults=20&key=${API_KEY}`);\r\n\r\n    if (!response.data.items)\r\n      return {\r\n        status: false,\r\n        data: []\r\n      } as ResponseVolumes\r\n\r\n    const data: Volume[] = response.data.totalItems > 0\r\n      ? response.data.items.map((book: any) => {\r\n        const { volumeInfo } = book;\r\n        return {\r\n          title: volumeInfo.title,\r\n          subtitle: volumeInfo.subtitle,\r\n          authors: volumeInfo.authors,\r\n          publishedDate: volumeInfo.publishedDate,\r\n          description: volumeInfo.description,\r\n          thumbnail: volumeInfo.imageLinks.smallThumbnail,\r\n          id: book.id\r\n        }\r\n      })\r\n      : [];\r\n\r\n    // console.table(data)\r\n    return {\r\n      status: true,\r\n      data\r\n    } as ResponseVolumes;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false } as ResponseVolumes;\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Queries google books api with given text and returns response.\r\n * @param id id to query \r\n * @returns Promise with status and volume info\r\n */\r\nexport const GET_VOLUME_BY_ID = async (id: string) => {\r\n  try {\r\n    const response = await axios.get(`${API_VOL_BASE}${id}?key=${API_KEY}`);\r\n\r\n    const { title, subtitle, authors, publishedDate, description, imageLinks } = response.data.volumeInfo;\r\n    const { publicDomain, epub } = response.data.accessInfo;\r\n\r\n    const data: VolumeDetails = {\r\n      title,\r\n      subtitle,\r\n      authors,\r\n      publishedDate,\r\n      description,\r\n      thumbnail: imageLinks.thumbnail,\r\n      id: response.data.id,\r\n      acsTokenLink: (typeof epub.acsTokenLink === 'string' &&\r\n        publicDomain === true) ?\r\n        epub.acsTokenLink :\r\n        null\r\n    };\r\n\r\n    return { status: true, data } as ResponseVol;\r\n  } catch (error) {\r\n    console.error(\"An error occurred\", \" => \\n\", error);\r\n    return { status: false, additionalInfo: 'not found' } as ResponseVol;\r\n  }\r\n}","//import React from 'react'\r\nimport { Card, CardContent, Typography, CardMedia, makeStyles, createStyles, Theme } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { Volume as VolumeProps } from '../../api/Queries';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n      minWidth: 345,\r\n      minHeight: 500,\r\n      paddingTop: '1em',\r\n      marginTop: '2em'\r\n    },\r\n    media: {\r\n      width: 'auto',\r\n      margin: '0 auto'\r\n    },\r\n    subtitle: {\r\n      color: '#a1a1a1'\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nconst VolumeCard: React.FC<{ data: VolumeProps }> = ({ data }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia className={classes.media} height={200} component=\"img\" alt=\"cover\" image={data.thumbnail} title={data.title} />\r\n      <CardContent>\r\n\r\n        <Typography variant=\"h5\" color=\"primary\" component=\"h2\">\r\n          <Link to={`/books/${data.id}`}>\r\n            {data.title}\r\n          </Link>\r\n        </Typography>\r\n        <Typography className={classes.subtitle} variant=\"subtitle2\" color=\"textSecondary\" gutterBottom component='p'>\r\n          {data.subtitle}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" component=\"span\">\r\n          <p >\r\n            {data.authors && data.authors.join(\", \")}\r\n          </p>\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {(data.description && data.description.length > 120)\r\n            ? data.description.slice(0, 120).replace(/<\\/?[^>]+(>|$)/g, \"\") + \"(...)\"\r\n            : data.description}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" component=\"span\" align=\"center\">\r\n          {data.publishedDate}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default VolumeCard\r\n","import { useEffect, useState } from \"react\";\r\n\r\n\r\nconst useDebounced = (value: string) => {\r\n  const [debounced, setDebounced] = useState<string>(value);\r\n\r\n  useEffect(() => {\r\n\r\n    const unSub = setTimeout(() => {\r\n      setDebounced(value);\r\n    }, 300)\r\n\r\n    return () => {\r\n      clearTimeout(unSub);\r\n    }\r\n  }, [value])\r\n\r\n  return debounced;\r\n}\r\n\r\n\r\nexport default useDebounced;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport \"./List.scss\";\r\nimport { GET_VOLUMES_BY_SEARCH, Volume } from '../../api/Queries';\r\nimport VolumeCard from './VolumeCard';\r\nimport useDebounced from '../Hooks/debounce';\r\n\r\n\r\n\r\nconst ListView: React.FC = () => {\r\n  const App = useRef<HTMLDivElement>(null);\r\n  const index = useRef(0);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [volumes, setVolumes] = useState<Volume[]>([]);\r\n  const [text, setText] = useState<string>(\"\");\r\n  const debouncedText = useDebounced(text);\r\n\r\n\r\n  const fetchMoreVolumes = async () => {\r\n    if (!loading) return;\r\n\r\n    try {\r\n      const { status, data } = await GET_VOLUMES_BY_SEARCH(text, index.current.toString())\r\n      if (!status || !data) return;\r\n\r\n      index.current += 10;\r\n      setVolumes([...volumes, ...data])\r\n      setLoading(false);\r\n    } catch (err) { console.log(err) }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', () => {\r\n      if (volumes.length === 0) return;\r\n      if (App.current === null) return;\r\n\r\n      if (App.current.getBoundingClientRect().bottom <= window.innerHeight + 5 && !loading) {\r\n        setLoading(true);\r\n      }\r\n    })\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setVolumes([]);\r\n    setLoading(true);\r\n    index.current = 0;\r\n\r\n  }, [debouncedText])\r\n\r\n  useEffect(() => {\r\n    if (loading)\r\n      fetchMoreVolumes();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loading])\r\n\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" ref={App}>\r\n      <Grid item xs={12}>\r\n        <SearchBar\r\n          handleInput={setText}\r\n          inputVal={text} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div className=\"volumes\">\r\n          {\r\n            volumes.map((vol, index) =>\r\n              <VolumeCard data={vol} key={index} />\r\n            )\r\n          }\r\n          {(volumes.length === 0 && !loading) && <h1>Could not find any matching books</h1>}\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div className=\"volumes\">\r\n          {loading && <CircularProgress className=\"loading\" color=\"secondary\" />}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nexport default ListView;\r\n","import React, { useEffect,  useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {  useParams } from 'react-router-dom';\r\nimport { GET_VOLUME_BY_ID, VolumeDetails } from '../../api/Queries';\r\nimport { Card, CardContent, CardMedia, CircularProgress, Typography, Button, Fab, Icon } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nimport './Details.scss';\r\n\r\n\r\nconst DetailsView = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const [notFound, setFound] = useState<boolean>(false);\r\n  const [volData, setVolData] = useState<false | VolumeDetails>(false);\r\n\r\n  const fetchVolumeInfo = async () => {\r\n    const { status, data, additionalInfo } = await GET_VOLUME_BY_ID(id);\r\n\r\n    if (additionalInfo && additionalInfo === 'not found')\r\n      setFound(true);\r\n    if (!status) {\r\n      setVolData(false);\r\n      return;\r\n    }\r\n    setVolData(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (volData === false)\r\n      fetchVolumeInfo();\r\n  });\r\n\r\n\r\n  if (notFound) {\r\n\r\n    setTimeout(() => {\r\n      window.location.href = '/'; //! works better and faster than with react-router\r\n    }, 2000);\r\n\r\n    return (\r\n      <Grid className=\"volCard\">\r\n        <Fab color=\"primary\" aria-label=\"back\" className=\"backArrow\" href=\"/\">\r\n          <Icon>arrow_back</Icon>\r\n        </Fab>\r\n        <Alert variant=\"outlined\" severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          Could not find this volume — <strong>we will redirect shortly!</strong>\r\n        </Alert>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid className=\"volCard\">\r\n      <Fab color=\"primary\" aria-label=\"back\" className=\"backArrow\" href=\"/\">\r\n        <Icon>arrow_back</Icon>\r\n      </Fab>\r\n      {volData ?\r\n        <Card>\r\n          <CardMedia height={300} component=\"img\" alt=\"cover\" image={volData.thumbnail} title={volData.title} />\r\n          <CardContent>\r\n\r\n            <Typography variant=\"h5\" color=\"primary\" component=\"h2\">\r\n              {volData.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom component='p'>\r\n              {volData.subtitle}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" component=\"span\">\r\n              <p >\r\n                {volData.authors && volData.authors.join(\", \")}\r\n              </p>\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {volData.description ?\r\n                volData.description.replace(/<\\/?[^>]+(>|$)/g, \"\") :\r\n                null}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" component=\"span\" align=\"center\">\r\n              {volData.publishedDate}\r\n            </Typography>\r\n            {volData.acsTokenLink ?\r\n              <Button className=\"link\" variant=\"outlined\" color=\"primary\" href={volData.acsTokenLink} >\r\n                Download\r\n              </Button> :\r\n              null}\r\n          </CardContent>\r\n        </Card>\r\n        :\r\n        <CircularProgress className=\"loading\" color=\"secondary\" />\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ListView from './features/List/ListView';\nimport DetailsView from './features/Details/DetailsView';\n\nimport './App.scss';\n\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\" onScroll={() => console.log('tu')}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ListView />\n          </Route>\n          <Route exact path=\"/books/:id\">\n            <DetailsView />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}